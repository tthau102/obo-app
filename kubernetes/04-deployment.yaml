---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: obo-app
  namespace: obo-ns
  labels:
    app: obo-app
    version: v1
spec:
  replicas: 2
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: obo-app
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: obo-app
        version: v1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/actuator/prometheus"
        prometheus.io/port: "8080"
    spec:
      imagePullSecrets:
        - name: harbor-registry

      containers:
        - name: obo-app
          image: harbor.server.thweb.click/tthau/obo-app:latest
          imagePullPolicy: Always

          ports:
            - name: http
              containerPort: 8080
              protocol: TCP

          env:
            # Application Config from ConfigMap
            - name: APP_PORT
              valueFrom:
                configMapKeyRef:
                  name: obo-config
                  key: APP_PORT
            - name: SPRING_PROFILES_ACTIVE
              valueFrom:
                configMapKeyRef:
                  name: obo-config
                  key: SPRING_PROFILES_ACTIVE

            # Database Config from ConfigMap
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: obo-config
                  key: DB_HOST
            - name: DB_PORT
              valueFrom:
                configMapKeyRef:
                  name: obo-config
                  key: DB_PORT
            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: obo-config
                  key: DB_NAME
            - name: DB_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: obo-config
                  key: DB_USERNAME

            # Secrets
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: obo-secret
                  key: DB_PASSWORD
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: obo-secret
                  key: JWT_SECRET
            - name: JWT_DURATION
              valueFrom:
                configMapKeyRef:
                  name: obo-config
                  key: JWT_DURATION

          # Health checks using Spring Boot Actuator
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: 8080
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3

          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3

          # Startup probe for slow-starting application
          startupProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 0
            periodSeconds: 5
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 30

          # Resource limits and requests
          resources:
            requests:
              cpu: 200m
              memory: 512Mi
            limits:
              cpu: 1000m
              memory: 1Gi

          # Security context
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: false
            capabilities:
              drop:
                - ALL

      # Restart policy
      restartPolicy: Always

      # DNS policy
      dnsPolicy: ClusterFirst

      # Termination grace period
      terminationGracePeriodSeconds: 30
